Question A:
It is possible to obtain a confidence level. One way this could be done is via an overload of the FaceRecognizer::predict method that takes a reference to a double - predicted_confidence for example. When the method is executed the predicted_confidence reference will be given the value of the system's confidence in the match of the face in the scene to the database of faces available.

When using the FaceRecognizer::predict that returns a match to a label this is simply saying which label the program thinks the face came from, in this case the s41 subfolder would be 41 in label terms so we would expect to see 41 being displayed when that persons face is being recognised by the camera and it could be any number from 0-40 when the persons face is not in the library of faces. It should end up being the subfolder that's face closest resembles theirs.

Question B:
The program will compensate if the person is far from the camera. This compensation can only go so far, if they are taking up so much of the frame that their face isn't fully displayed or if they get very far away the facial recognition will not work. 
The program will recognise faces most accurately when the face is fairly close, but will still recognise that their is a face there when the person is far or close. It will not be as accurate at determining who is on the image in the more extreme circumstances.

A cascading classifier is helpful. This is because it will allow the program to identify sets of features that make up an object, in this case a face and target that specific area for recognition. This means that there doesn't need to be a set area within the image where a face must be and the cascade allows the program to track the face once identified. These advantages make the program more dynamic allowing for real time detection and detection of multiple faces in the scene instead of something more static such as defining a set area and distance from the camera where the recognition must take place. 